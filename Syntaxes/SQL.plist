<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sql</string>
		<string>ddl</string>
		<string>dml</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\s*\(\s*$</string>
	<key>foldingStopMarker</key>
	<string>^\s*\)</string>
	<key>name</key>
	<string>SQL</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.sql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.sql</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:^\s*(create)\s+(aggregate|conversion|database|domain|function|group|(unique\s+)?index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)(['"`])?(\w+)</string>
			<key>name</key>
			<string>declaration.create.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\b(on\s+|(not\s+)?null)\b)</string>
			<key>name</key>
			<string>keyword.other.DDL.create.II.sql</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.sql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:^\s*(drop)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view))</string>
			<key>name</key>
			<string>declaration.drop.sql</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.sql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.sql</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.sql</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.cascade.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:\s*(drop)\s+(table)\s+(\w+)(\s+cascade)?\b)</string>
			<key>name</key>
			<string>declaration.drop.sql</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.create.sql</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.table.sql</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?i:^\s*(alter)\s+(aggregate|conversion|database|domain|function|group|index|language|operator class|operator|rule|schema|sequence|table|tablespace|trigger|type|user|view)\s+)</string>
			<key>name</key>
			<string>declaration.alter.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\b(select(\s+distinct)?|insert\s+into|update|delete|from|where|group\sby|and|union(\s+all)?|having|order\sby)\b)</string>
			<key>name</key>
			<string>keyword.other.DML.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\bvalues\b)</string>
			<key>name</key>
			<string>keyword.other.DML.II.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\b(begin(\s+work)?|start\s+transaction|commit(\s+work)?|rollback(\s+work)?)\b)</string>
			<key>name</key>
			<string>keyword.other.sql.LUW.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\b(grant(\swith\sgrant\soption)?|revoke)\b)</string>
			<key>name</key>
			<string>keyword.other.authorization.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\b(bigint|bigserial|bit|bit\svarying\(\d+\)|boolean|box|bytea|character\s(varying)?\(\d+\)|char\(\d+\)|var\schar\(\d+\)|char(\(\d+\))?|cidr|circle|date|double\sprecision|float\(\d+\)|inet|int|integer|interval\(\d+\)|line|lseg|macaddr|money|number(\(\d+\))?|numeric(\(\d+,\d+\))?|oid|path|point|polygon|real|smallint|serial|sysdate|text|times(\(\d+\))(\swithoutstimeszone)?|timestamp(s(\(\d+\))(\swithoutstimeszone)?)?|tinyint\(\d+\)|varchar\d?(\(\d+\))?)\s*)\b</string>
			<key>name</key>
			<string>storage.type.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\b(primary\s+key|references|on\sdelete(\s+cascade)?|check)\b)</string>
			<key>name</key>
			<string>storage.modifier.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:\bin\b)</string>
			<key>name</key>
			<string>keyword.other.data-integrity.sql</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>'</string>
			<key>end</key>
			<string>'</string>
			<key>name</key>
			<string>string.quoted.single.sql</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>`</string>
			<key>end</key>
			<string>`</string>
			<key>name</key>
			<string>string.quoted.other.backtick.sql</string>
			<key>swallow</key>
			<string>\\.</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:^\s*(comment\s+on\s+(table|column|aggregate|constraint|database|domain|function|index|operator|rule|schema|sequence|trigger|type|view))\s+.*?\s+(is)\s+)</string>
			<key>name</key>
			<string>keyword.other.object-comments.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>--.*$</string>
			<key>name</key>
			<string>comment.line.double-dash.sql</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#.*$</string>
			<key>name</key>
			<string>comment.line.number-sign.sql</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.c</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>end</key>
			<string>"</string>
			<key>name</key>
			<string>string.quoted.double.sql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#\{([^\}]*)\}</string>
					<key>name</key>
					<string>string.interpolation.sql</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>%\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.quoted.double.sql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#\{([^\}]*)\}</string>
					<key>name</key>
					<string>string.interpolation.sql</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/(?=\S.*/)</string>
			<key>end</key>
			<string>/</string>
			<key>name</key>
			<string>string.regexp.sql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#\{([^\}]*)\}</string>
					<key>name</key>
					<string>string.interpolation.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\/</string>
					<key>name</key>
					<string>string.escaped-slash.sql</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>%r\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>string.regexp.modr.sql</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>#\{([^\}]*)\}</string>
					<key>name</key>
					<string>string.interpolation.sql</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\/</string>
					<key>name</key>
					<string>constant.character.escaped.slash.sql</string>
				</dict>
			</array>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.sql</string>
	<key>uuid</key>
	<string>C49120AC-6ECC-11D9-ACC8-000D93589AF6</string>
</dict>
</plist>
